[{"/home/const/Documents/GitHub/todo-app-frontend/src/index.js":"1","/home/const/Documents/GitHub/todo-app-frontend/src/App.js":"2","/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/todo.js":"3","/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/todoFunctions.js":"4","/home/const/Documents/GitHub/todo-app-frontend/src/api/api.js":"5","/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/add.jsx":"6","/home/const/Documents/GitHub/todo-app-frontend/src/components/Reducers/taskReducer.jsx":"7","/home/const/Documents/GitHub/todo-app-frontend/src/redux/store.jsx":"8"},{"size":657,"mtime":1699352483262,"results":"9","hashOfConfig":"10"},{"size":818,"mtime":1699364113384,"results":"11","hashOfConfig":"10"},{"size":164,"mtime":1699356896928,"results":"12","hashOfConfig":"10"},{"size":7807,"mtime":1699432548839,"results":"13","hashOfConfig":"10"},{"size":1937,"mtime":1699432832881,"results":"14","hashOfConfig":"10"},{"size":2796,"mtime":1699429112192,"results":"15","hashOfConfig":"10"},{"size":1749,"mtime":1699432930662,"results":"16","hashOfConfig":"10"},{"size":197,"mtime":1699367416656,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1gehf5p",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/const/Documents/GitHub/todo-app-frontend/src/index.js",[],[],["44","45","46","47","48","49"],"/home/const/Documents/GitHub/todo-app-frontend/src/App.js",[],[],"/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/todo.js",[],[],"/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/todoFunctions.js",["50","51"],[],"/home/const/Documents/GitHub/todo-app-frontend/src/api/api.js",[],[],"/home/const/Documents/GitHub/todo-app-frontend/src/components/Todo/add.jsx",["52","53"],[],"import React, { useEffect } from \"react\";\nimport { Input } from \"@mui/material\";\nimport { useState } from \"react\";\n// import {\n//     insertTodo,\n//     getAllTodos,\n\n// } from \"../../api/api\";\nimport {\n    Button,\n    Card,\n    Container,\n    Navbar,\n} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\"\nimport { toast } from \"react-toastify\";\n\nimport { addTask, setTask } from \"../Reducers/taskReducer\";\n\nfunction Add() {\n    const dispatch = useDispatch();\n    const [todoTask, settodoTask] = useState(\"\")\n    const navigate = useNavigate();\n    const handleAddClick = () => {\n        if (todoTask?.length > 0) {\n            dispatch(addTask({todoTask,navigate})) \n            // dispatch(setTask(todoTask))\n            // navigate(\"/\");\n        } else {\n            toast.warn(\"Empty task cannot be inserted\", { autoClose: 600 });\n            navigate(\"/add\");\n        }\n    };\n\n    return (\n        <><Navbar bg=\"dark\" expand=\"sm\" variant=\"dark\">\n            <Container fluid>\n                <Navbar.Brand className=\"mx-auto\">ADD TODO TASK HERE </Navbar.Brand>\n            </Container>\n        </Navbar>\n            <Container className=\" justify-content-center\">\n                <Card className=\"shadow-lg\">\n                    <Card.Body className=\"center\">\n                        <div\n                            style={{\n                                padding: \"10px\",\n                                overflow: \"auto\",\n                                whiteSpace: \"pre-wrap\",\n                                color: \"black\",\n                                textAlign: \"center\",\n                                margin: \"19px\", // Add margin to create space around the element\n                            }}\n                        >\n                            <Input\n                                placeholder=\"enter task\"\n                                variant=\"light\"\n                                animation=\"glow\"\n                                xs={4}\n                                value={todoTask}\n                                onChange={(event) => settodoTask(event.target.value)}\n                            ></Input>\n                            <span style={{ margin: '3px' }}></span>\n                            <Button\n                                size=\"sm\"\n                                className=\"\"\n                                variant=\"dark\"\n                                expand=\"sm\"\n                                onClick={handleAddClick}\n                            >\n                                ADD\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n\n            </Container></>\n\n    )\n}\n\n\nexport default Add;","/home/const/Documents/GitHub/todo-app-frontend/src/components/Reducers/taskReducer.jsx",[],[],"/home/const/Documents/GitHub/todo-app-frontend/src/redux/store.jsx",[],[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":19,"column":17,"nodeType":"68","messageId":"69","endLine":19,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":46,"column":5,"nodeType":"72","endLine":46,"endColumn":15,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"74","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"67","line":19,"column":19,"nodeType":"68","messageId":"69","endLine":19,"endColumn":26},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["75"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'setTask' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'todolist' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'useEffect' is defined but never used.","no-object-constructor",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch, todolist, todos]",{"range":"79","text":"80"},[1431,1441],"[dispatch, todolist, todos]"]