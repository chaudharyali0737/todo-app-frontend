{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsociet\\\\Documents\\\\GitHub\\\\multi-national-estimation\\\\src\\\\components\\\\Todo\\\\todo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { deleteTodo, getAllTodos, getOneTodo, insertTodo, updateOneTodo, deleteAllTodos } from \"../../api/api\";\nimport \"./todo.css\";\nimport { Input, TableCell } from \"@mui/material\";\nimport { Button, Col, Container, Row, button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AllTodo from \"./todoFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages(props) {\n  // const [todos, settodos] = useState([]);\n  // const [todo, settodo] = useState();\n  // const [getOneT, setOneTodo] = useState(null);\n  // const [id, setId] = useState(0);\n  // const [task, setTask] = useState(\"\");\n  // const [isGetAll, setIsGetAll] = useState(false);\n  // const [isDeleted, setIsDeleted] = useState(false);\n  // const [deleteTodoID, setdeleteTodoID] = useState(0);\n  // const [isInserted, setisInserted] = useState(false);\n  // const [todoTask, settodoTask] = useState(\"\");\n  // const [isDeleteAll, setIsDeleteAll] = useState(false);\n\n  // useEffect(() => {\n  //   const getAll = async () => {\n  //     let result = await getAllTodos();\n  //     if (result.length > 0) {\n  //       settodos(result);\n  //     }\n  //   };\n  //   getAll();\n  //   console.log(\"calls made 33 \", {\n  //     isGetAll,\n  //     isDeleted,\n  //     isInserted,\n  //     isDeleteAll,\n  //   });\n  // }, [isGetAll, isDeleted, isInserted, isDeleteAll]);\n\n  // const getOne = async () => {\n  //   setOneTodo(null);\n  //   let result2 = await getOneTodo(todo);\n  //   if (result2.length > 0) {\n  //     console.log(\"data by getone : \", result2.length);\n  //     setOneTodo(result2);\n  //   }\n  // };\n\n  // const updateSingleTodo = async () => {\n  //   updateOneTodo(id, task);\n  //   setIsGetAll(!isGetAll);\n  // };\n\n  // const deleteOneTodo = async () => {\n  //   deleteTodo(deleteTodoID);\n\n  //   setIsDeleted(!isDeleted);\n  // };\n\n  // const insertOneTodo = async () => {\n  //   insertTodo(todoTask);\n  //   setisInserted(!isInserted);\n  // };\n  // const deleteAll = async () => {\n  //   deleteAllTodos();\n  //   setIsDeleteAll(!isDeleteAll);\n  //   console.log(\"calls made 65 \");\n  // };\n  // const sortedTodos = [...todos].sort((a, b) => a.id - b.id);\n  // const [isButtonVisible, setButtonVisible] = useState(false);\n  // const [activeRowId, setActiveRowId] = useState(null);\n  // const handleMouseEnter = (id) => {\n  //   setButtonVisible(true);\n  //   setActiveRowId(id);\n  // };\n  // const handleMouseLeave = () => {\n  //   setButtonVisible(false);\n  //   setActiveRowId(null);\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AllTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","deleteTodo","getAllTodos","getOneTodo","insertTodo","updateOneTodo","deleteAllTodos","Input","TableCell","Button","Col","Container","Row","button","AllTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fsociet/Documents/GitHub/multi-national-estimation/src/components/Todo/todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  deleteTodo,\r\n  getAllTodos,\r\n  getOneTodo,\r\n  insertTodo,\r\n  updateOneTodo,\r\n  deleteAllTodos,\r\n} from \"../../api/api\";\r\n\r\nimport \"./todo.css\";\r\nimport { Input, TableCell } from \"@mui/material\";\r\nimport { Button, Col, Container, Row, button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport AllTodo from \"./todoFunctions\";\r\nfunction Messages(props) {\r\n  // const [todos, settodos] = useState([]);\r\n  // const [todo, settodo] = useState();\r\n  // const [getOneT, setOneTodo] = useState(null);\r\n  // const [id, setId] = useState(0);\r\n  // const [task, setTask] = useState(\"\");\r\n  // const [isGetAll, setIsGetAll] = useState(false);\r\n  // const [isDeleted, setIsDeleted] = useState(false);\r\n  // const [deleteTodoID, setdeleteTodoID] = useState(0);\r\n  // const [isInserted, setisInserted] = useState(false);\r\n  // const [todoTask, settodoTask] = useState(\"\");\r\n  // const [isDeleteAll, setIsDeleteAll] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const getAll = async () => {\r\n  //     let result = await getAllTodos();\r\n  //     if (result.length > 0) {\r\n  //       settodos(result);\r\n  //     }\r\n  //   };\r\n  //   getAll();\r\n  //   console.log(\"calls made 33 \", {\r\n  //     isGetAll,\r\n  //     isDeleted,\r\n  //     isInserted,\r\n  //     isDeleteAll,\r\n  //   });\r\n  // }, [isGetAll, isDeleted, isInserted, isDeleteAll]);\r\n\r\n  // const getOne = async () => {\r\n  //   setOneTodo(null);\r\n  //   let result2 = await getOneTodo(todo);\r\n  //   if (result2.length > 0) {\r\n  //     console.log(\"data by getone : \", result2.length);\r\n  //     setOneTodo(result2);\r\n  //   }\r\n  // };\r\n\r\n  // const updateSingleTodo = async () => {\r\n  //   updateOneTodo(id, task);\r\n  //   setIsGetAll(!isGetAll);\r\n  // };\r\n\r\n  // const deleteOneTodo = async () => {\r\n  //   deleteTodo(deleteTodoID);\r\n\r\n  //   setIsDeleted(!isDeleted);\r\n  // };\r\n\r\n  // const insertOneTodo = async () => {\r\n  //   insertTodo(todoTask);\r\n  //   setisInserted(!isInserted);\r\n  // };\r\n  // const deleteAll = async () => {\r\n  //   deleteAllTodos();\r\n  //   setIsDeleteAll(!isDeleteAll);\r\n  //   console.log(\"calls made 65 \");\r\n  // };\r\n  // const sortedTodos = [...todos].sort((a, b) => a.id - b.id);\r\n  // const [isButtonVisible, setButtonVisible] = useState(false);\r\n  // const [activeRowId, setActiveRowId] = useState(null);\r\n  // const handleMouseEnter = (id) => {\r\n  //   setButtonVisible(true);\r\n  //   setActiveRowId(id);\r\n  // };\r\n  // const handleMouseLeave = () => {\r\n  //   setButtonVisible(false);\r\n  //   setActiveRowId(null);\r\n  // };\r\n  return (\r\n    <>\r\n      <AllTodo></AllTodo>   \r\n          </>\r\n  );\r\n}\r\nexport default Messages;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,aAAa,EACbC,cAAc,QACT,eAAe;AAEtB,OAAO,YAAY;AACnB,SAASC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AAChD,SAASC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,QAAQ,iBAAiB;AACrE,OAAO,sCAAsC;AAC7C,OAAOC,OAAO,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACtC,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA,CAACF,OAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC,gBACb,CAAC;AAEb;AAACC,EAAA,GA1EQP,QAAQ;AA2EjB,eAAeA,QAAQ;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}