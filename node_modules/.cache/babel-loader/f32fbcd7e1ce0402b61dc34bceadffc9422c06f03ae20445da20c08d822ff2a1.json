{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsociet\\\\Documents\\\\GitHub\\\\multi-national-estimation\\\\src\\\\components\\\\Todo\\\\todo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { deleteTodo, getAllTodos, getOneTodo, insertTodo, updateOneTodo, deleteAllTodos } from \"../../api/api\";\nimport \"./todo.css\";\nimport { Input, TableCell } from \"@mui/material\";\nimport { Button, Col, Container, Row, button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AllTodo from \"./todoFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages(props) {\n  // const [todos, settodos] = useState([]);\n  // const [todo, settodo] = useState();\n  // const [getOneT, setOneTodo] = useState(null);\n  // const [id, setId] = useState(0);\n  // const [task, setTask] = useState(\"\");\n  // const [isGetAll, setIsGetAll] = useState(false);\n  // const [isDeleted, setIsDeleted] = useState(false);\n  // const [deleteTodoID, setdeleteTodoID] = useState(0);\n  // const [isInserted, setisInserted] = useState(false);\n  // const [todoTask, settodoTask] = useState(\"\");\n  // const [isDeleteAll, setIsDeleteAll] = useState(false);\n\n  // useEffect(() => {\n  //   const getAll = async () => {\n  //     let result = await getAllTodos();\n  //     if (result.length > 0) {\n  //       settodos(result);\n  //     }\n  //   };\n  //   getAll();\n  //   console.log(\"calls made 33 \", {\n  //     isGetAll,\n  //     isDeleted,\n  //     isInserted,\n  //     isDeleteAll,\n  //   });\n  // }, [isGetAll, isDeleted, isInserted, isDeleteAll]);\n\n  // const getOne = async () => {\n  //   setOneTodo(null);\n  //   let result2 = await getOneTodo(todo);\n  //   if (result2.length > 0) {\n  //     console.log(\"data by getone : \", result2.length);\n  //     setOneTodo(result2);\n  //   }\n  // };\n\n  // const updateSingleTodo = async () => {\n  //   updateOneTodo(id, task);\n  //   setIsGetAll(!isGetAll);\n  // };\n\n  // const deleteOneTodo = async () => {\n  //   deleteTodo(deleteTodoID);\n\n  //   setIsDeleted(!isDeleted);\n  // };\n\n  // const insertOneTodo = async () => {\n  //   insertTodo(todoTask);\n  //   setisInserted(!isInserted);\n  // };\n  // const deleteAll = async () => {\n  //   deleteAllTodos();\n  //   setIsDeleteAll(!isDeleteAll);\n  //   console.log(\"calls made 65 \");\n  // };\n  // const sortedTodos = [...todos].sort((a, b) => a.id - b.id);\n  // const [isButtonVisible, setButtonVisible] = useState(false);\n  // const [activeRowId, setActiveRowId] = useState(null);\n  // const handleMouseEnter = (id) => {\n  //   setButtonVisible(true);\n  //   setActiveRowId(id);\n  // };\n  // const handleMouseLeave = () => {\n  //   setButtonVisible(false);\n  //   setActiveRowId(null);\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AllTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: props.className,\n        children: \"TODO List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Add Task Here \",\n            size: \"md\",\n            onChange: e => settodoTask(e.target.value),\n            value: todoTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: insertOneTodo,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteAll,\n          children: \"Delete All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: props.className,\n          children: \"Get single todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"enter todo id here\",\n          onChange: e => settodo(e.target.value),\n          value: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getOne,\n          children: \"Get record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          overflow: \"auto\",\n          whiteSpace: \"pre-wrap\",\n          color: \"white\"\n          // backgroundColor: 'blue',\n        },\n        children: getOneT ? getOneT.map(item => {\n          const createdAt = new Date(item.createdAt);\n          const formattedDate = createdAt.toDateString();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", item.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"TASK: \", item.task]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"CreatedAt: \", formattedDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this);\n        }) : \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","deleteTodo","getAllTodos","getOneTodo","insertTodo","updateOneTodo","deleteAllTodos","Input","TableCell","Button","Col","Container","Row","button","AllTodo","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","props","children","fileName","_jsxFileName","lineNumber","columnNumber","className","div","placeholder","size","onChange","e","settodoTask","target","value","todoTask","onClick","insertOneTodo","deleteAll","settodo","todo","getOne","style","padding","overflow","whiteSpace","color","getOneT","map","item","createdAt","Date","formattedDate","toDateString","id","task","_c","$RefreshReg$"],"sources":["C:/Users/fsociet/Documents/GitHub/multi-national-estimation/src/components/Todo/todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  deleteTodo,\r\n  getAllTodos,\r\n  getOneTodo,\r\n  insertTodo,\r\n  updateOneTodo,\r\n  deleteAllTodos,\r\n} from \"../../api/api\";\r\n\r\nimport \"./todo.css\";\r\nimport { Input, TableCell } from \"@mui/material\";\r\nimport { Button, Col, Container, Row, button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport AllTodo from \"./todoFunctions\";\r\nfunction Messages(props) {\r\n  // const [todos, settodos] = useState([]);\r\n  // const [todo, settodo] = useState();\r\n  // const [getOneT, setOneTodo] = useState(null);\r\n  // const [id, setId] = useState(0);\r\n  // const [task, setTask] = useState(\"\");\r\n  // const [isGetAll, setIsGetAll] = useState(false);\r\n  // const [isDeleted, setIsDeleted] = useState(false);\r\n  // const [deleteTodoID, setdeleteTodoID] = useState(0);\r\n  // const [isInserted, setisInserted] = useState(false);\r\n  // const [todoTask, settodoTask] = useState(\"\");\r\n  // const [isDeleteAll, setIsDeleteAll] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const getAll = async () => {\r\n  //     let result = await getAllTodos();\r\n  //     if (result.length > 0) {\r\n  //       settodos(result);\r\n  //     }\r\n  //   };\r\n  //   getAll();\r\n  //   console.log(\"calls made 33 \", {\r\n  //     isGetAll,\r\n  //     isDeleted,\r\n  //     isInserted,\r\n  //     isDeleteAll,\r\n  //   });\r\n  // }, [isGetAll, isDeleted, isInserted, isDeleteAll]);\r\n\r\n  // const getOne = async () => {\r\n  //   setOneTodo(null);\r\n  //   let result2 = await getOneTodo(todo);\r\n  //   if (result2.length > 0) {\r\n  //     console.log(\"data by getone : \", result2.length);\r\n  //     setOneTodo(result2);\r\n  //   }\r\n  // };\r\n\r\n  // const updateSingleTodo = async () => {\r\n  //   updateOneTodo(id, task);\r\n  //   setIsGetAll(!isGetAll);\r\n  // };\r\n\r\n  // const deleteOneTodo = async () => {\r\n  //   deleteTodo(deleteTodoID);\r\n\r\n  //   setIsDeleted(!isDeleted);\r\n  // };\r\n\r\n  // const insertOneTodo = async () => {\r\n  //   insertTodo(todoTask);\r\n  //   setisInserted(!isInserted);\r\n  // };\r\n  // const deleteAll = async () => {\r\n  //   deleteAllTodos();\r\n  //   setIsDeleteAll(!isDeleteAll);\r\n  //   console.log(\"calls made 65 \");\r\n  // };\r\n  // const sortedTodos = [...todos].sort((a, b) => a.id - b.id);\r\n  // const [isButtonVisible, setButtonVisible] = useState(false);\r\n  // const [activeRowId, setActiveRowId] = useState(null);\r\n  // const handleMouseEnter = (id) => {\r\n  //   setButtonVisible(true);\r\n  //   setActiveRowId(id);\r\n  // };\r\n  // const handleMouseLeave = () => {\r\n  //   setButtonVisible(false);\r\n  //   setActiveRowId(null);\r\n  // };\r\n  return (\r\n    <>\r\n      <AllTodo></AllTodo>   \r\n      <div className={props.div}>\r\n        <h1 className={props.className}>TODO List</h1>\r\n        <div className=\"mainDiv\">\r\n          <div>\r\n            <Input\r\n              placeholder=\"Add Task Here \"\r\n              size=\"md\"\r\n              onChange={(e) => settodoTask(e.target.value)}\r\n              value={todoTask}\r\n            />\r\n          </div>{\" \"}\r\n          <Button onClick={insertOneTodo}>\r\n            Add\r\n          </Button>\r\n          <Button  onClick={deleteAll}>\r\n            Delete All\r\n          </Button>\r\n        </div>\r\n\r\n        \r\n        <div>\r\n          <h1 className={props.className}>Get single todo</h1>\r\n          <Input\r\n            placeholder=\"enter todo id here\"\r\n            onChange={(e) => settodo(e.target.value)}\r\n            value={todo}\r\n          ></Input>\r\n          <Button onClick={getOne}>\r\n            Get record\r\n          </Button>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            padding: \"10px\",\r\n            overflow: \"auto\",\r\n            whiteSpace: \"pre-wrap\",\r\n            color: \"white\",\r\n            // backgroundColor: 'blue',\r\n          }}\r\n        >\r\n          {getOneT\r\n            ? getOneT.map((item) => {\r\n                const createdAt = new Date(item.createdAt);\r\n                const formattedDate = createdAt.toDateString();\r\n                return (\r\n                  <div key={item.id}>\r\n                    <p>ID: {item.id}</p>\r\n                    <p>TASK: {item.task}</p>\r\n                    <p>CreatedAt: {formattedDate}</p>\r\n                  </div>\r\n                );\r\n              })\r\n            : \"No data available\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Messages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}